---
import { 
  Layout,
  Layers,
  Smartphone,
  FileCode,
  Code2,
  Monitor,
  Palette,
  Paintbrush,
  Box,
  Code,
  Terminal,
  Cpu,
  GitBranch,
  Brain,
  Network,
} from 'lucide-astro';


interface Technology {
  name: string;
  icon: typeof Layout;
  expert?: boolean;
}

interface TechnologyGroups {
  [key: string]: Technology[];
}

const technologies: TechnologyGroups = {
  "frontend frameworks": [
    { name: 'Angular', icon: Layers, expert: true },
    { name: 'Ionic', icon: Smartphone },
    { name: 'Blazor', icon: FileCode },
    { name: 'JavaScript/TypeScript', icon: Code2 },
    { name: 'Astro', icon: Layout },
    { name: 'ElectronJS', icon: Monitor },
  ],
  "styling": [
    { name: 'CSS/SCSS', icon: Palette, expert: true },
    { name: 'Tailwind', icon: Paintbrush },
    { name: 'PrimeNG', icon: Box },
    { name: 'Material', icon: Box },
    { name: 'Bootstrap', icon: Box },
    { name: 'DevExpress', icon: Box },
  ],
  "tools": [
    { name: 'Git', icon: GitBranch },
    { name: 'VS Code', icon: Code },
    { name: 'Visual Studio', icon: Terminal },
    { name: 'AI Tools', icon: Brain },
    { name: 'GraphQL', icon: Network },
    { name: 'REST', icon: Cpu },
  ]
};
---

<section class="max-w-5xl mx-auto px-4 py-20">
  <h2 class="text-3xl font-bold text-center mb-12">Technologies & Tools</h2>
  
  <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
    {Object.entries(technologies).map(([category, items]) => (
      <div class="p-6 rounded-xl bg-white shadow-sm hover:shadow-md transition-all duration-300">
        <h3 class="text-xl font-semibold capitalize mb-4 text-center">{category}</h3>
        <div class="space-y-3">
          {items.map(({ name, icon: Icon, expert }) => (
            <div class="flex items-center gap-4 group hover:bg-gray-50 p-2 rounded-lg transition-colors">
              <Icon class="w-6 h-6 stroke-gray-700 group-hover:stroke-gray-900 transition-colors" />
              <div class="flex items-center gap-2">
                <span class="text-gray-600 group-hover:text-gray-900 transition-colors">{name}</span>
                {expert && (
                  <span class="text-xs px-2 py-0.5 bg-gray-100 text-gray-600 rounded-full">Expert</span>
                )}
              </div>
            </div>
          ))}
        </div>
      </div>
    ))}
  </div>
  <div class="mt-12 text-center">
    <p class="text-gray-600 mb-4">
      I also created a fun NPM package called <a 
        href="https://www.npmjs.com/package/bosnian-css-preprocessor" 
        target="_blank" 
        rel="noopener noreferrer"
        class="text-gray-900 font-medium hover:underline"
      >bosnian-css-preprocessor</a> that lets you write CSS using Bosnian language properties. 
      It's a playful experiment that translates Bosnian CSS property names into valid CSS.
    </p>
  </div>
</section>